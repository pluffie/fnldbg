(位 fail [fmt ...]
  (print (.. "\x1b[1;31merror:\x1b[0m " (string.format fmt ...)))
  (os.exit 1))

(local help
  ["Usage: fnldbg [--serve | --connect] [options] <path>"
   ""
   "fnldbg is a remote debugger. It means that fnldbg requires two instances:"
   "server and client. To debug, you start the server with `fnldbg --serve` and"
   "then connect to it with `fnldbg --connect`."
   ""
   "When called with just a file path, fnldbg starts in standalone mode. It"
   "means that both the server and the client are started in same process, so"
   "it can be used like a regular debugger."
   ""
   "Options:"
   "  --help : Show this message"
   ""
   "Debugger options (can only be used in server and standalone mode):"
   "  --metadata file (-m) : Specify metadata file generated by metafennel"])

(位 show-help-and-die []
  (each [_ line (ipairs help)] (print line))
  (os.exit 0))

(位 parse-debugger-args [args]
  (local options {:file nil
                  :?meta-file nil})
  (位 loop [args]
    (case args
      ["--help"]
      (show-help-and-die)

      ["--metadata" file & args]
      (do (if (= nil options.?meta-file)
              (set options.?meta-file file)
              (fail "You must specify only one metadata file"))
          (loop args))

      ["-m" file & args]
      (do (if (= nil options.?meta-file)
              (set options.?meta-file file)
              (fail "You must specify only one metadata file"))
          (loop args))

      (where [option] (string.match option "^-.+"))
      (fail "Invalid option: %s" option)

      [file & args]
      (do (if (= nil options.file)
              (set options.file file)
              (fail "You must specify only one file"))
          (loop args))))
  (loop args)

  (when (= nil options.file) (fail "No file specified"))

  options)

(case arg
  (where args (= 0 (length args)))
  (show-help-and-die)

  ["--serve" & args]
  ((require :fnldbg.modes.serve) (parse-debugger-args args))

  ["--connect"]
  ((require :fnldbg.modes.connect))

  [& args]
  ((require :fnldbg.modes.standalone) (parse-debugger-args args)))
